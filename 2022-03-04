# Assotr-Study
// //, /* */ (주석) : 실제 코드가 동작될시 무시됨, 코드에 대한 설명을 달아줌

/*
앞에 #표시가 붙을시 전처리기가 됨
전처리기 : 컴파일 전 먼저 처리 후 컴파일
컴파일 : 코드번역작업,

컴파일 -> 실행파일 생성
*/

/*
#include : 컴파일 전 원하는 헤더파일을 여기에 포함시켜 해당 헤더파일에서 제공되는
기능을 여기에서 사용할 수 있도록 해줌
iostream : C++의 표준 입력 및 출력 기능을 제공해주는 헤더파일

C++의 콘솔 진입점 함수
main의 {}(코드블럭) 안에 있는 코드가 실제로 동작됨

코드가 완성되어 실행되고자하면 Ctrl + Shift + B 를 이용해 빌드, 빌드시 컴파일도 자동으로 이루어짐
Ctrl + F5 를 이용해 만들어진 실행파일 실행 가능
*/
#include <iostream>

int main()
{
	/*
C++에서 제공되는 대부분의 기능들은 std라는 namespace로 이루어져있다
C++은 car, Car이 서로 다르다.
이름의 중복을 방지하기 위해 namespace로 기능들을 감싸주었다.
이 경우 std namespace를 통해서 안의 기능들을 접근해야한다.
C++에서 콘솔창에 출력하기 위해서 제공되는 기능으로 cout이 있다.
cout은 std namespace안에 포함되어 있기 때문에 ::(범위 지정 연산자)를 통해서 접근하게된다.
std::cout-std 안에 있는 cout이라는 의미로 사용한다.
만약 여기에 cout이라는 이름으로 다른걸 만들었다면 std::cout, cout은 서로 다르다.
*/

//; : 마침표 같은 것, 한줄이 끝난경우 붙임

//코드는 위에서 아래로 실행된다, 보통 오른쪽에서 왼쪽으로 동작됨

	/*
	\n : 한줄 개행, Enter 키를 친 효과와 같다, 문자열이므로 " " 안에 들어가야 인식함
	\t : Teb 키를 입력한 것과 같은 효과
	", \ 등 특수한 문자 출력시 앞에 \를 붙인다.
	*/
	
	//printf : 출력, C언어의 출력방식
	printf("Hi \n");

	//endl : 개행을 시켜준다
	std::cout << std::endl; // = std::cout<<"\n"
	std::cout << 
		std::endl;

	/*
	프로그램이 동작될 때 필요한 데이터들은 메모리에 저장된다.
	메모리 : 주기억장치 - 휘발성, 프로그램 종료 -> 저장된 데이터 사라짐
	하드디스크 or SSD : 보조기억장치 - 비휘발성, 반영구적 저장 가능
	*/

	/*
	용량의 최소단위 - 1bit
	1byte = 8bit, 1kbyte = 1024byte, 1gbyte = 1024mbyte, 1tbyte= 1024gbyte
	1bit : 0. 1 둘중 하나의 값을 저장 할 수 있다.
	1byte는 256가지의 값을 표현 할 수 있다.
	C++에서 데이터를 저장하기 위한 수단으로 변수가 지원된다.
	   타입      |     메모리 크기     |     표현 종류    |     값의 표현 범위
	   bool     |      1byte        |   참(1), 거짓(0)  |      false, true
	   char     |      1byte        |       문자        |      -128 ~ 127
	   short    |      2byte        |       정수        |    -32768 ~ 32767
	   int      |      4byte        |       정수        |-2147483648 ~ 2147483647
	   __int    |      8byte        |       정수        |    
       float    |      4byte        |     부동소수점    |
	   double   |      8byte        |     부동소수점    |
	*/
	int name = 4;
	
	//F12 키를 이용해서 코드의 구현부분으로 이동 가능

	/*
	실수 뒤에 f를 붙여주면 float 타입의 실수가 된다.
	실수 뒤에 d를 붙여주면 double 타입의 실수가 된다.
	*/

	//변수의 이름은 목적에 따라 영문으로

	/*
	= : 대입연산자, 오른쪽의 값을 왼쪽 변수에 넣어준다.
	대입연산자로 변수에 값을 넣고 cout으로 출력하면 오른쪽에 넣은 값으로 출력한다.
	*/

	return 0;
}


