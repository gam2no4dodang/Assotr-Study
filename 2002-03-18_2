#include <iostream>
#include <time.h>

//AI enum class 생성
enum class AIType
{
	None,
	Easy,
	Hard,
	Max
};

int main()
{
	//난수 생성
	srand((unsigned int)time(0));
	int Random = rand();

	//AI 난이도 변수
	int AIState = 0;

	//AI 난이도 선택 시스템
	while (true)
	{
		system("cls");

		std::cout << "1. 쉬움" << std::endl;
		std::cout << "2. 어려움" << std::endl;
		std::cout << "난이도를 선택하세요 : ";
		std::cin >> AIState;

		//None = 0, Max = 3 이므로 None보다 작거나 Max보다 큰 수 입력시 빠져나감.
		if (AIState > (int)AIType::None &&
			AIState < (int)AIType::Max)
			break;
	}
	//플레이어와 AI의 배열 공간 생성 후 초기화
	int Number[25] = {};
	int AINumber[25] = {};

	//플레이어,AI 배열에 숫자 삽입
	for (int i = 0; i < 25; ++i)
	{
		Number[i] = i + 1;
		AINumber[i] = i + 1;
	}
	
	//플레이어, AI 배열의 숫자를 랜덤하게 배치해준다.
	for (int i = 0; i < 100; ++i)
	{
		int Idx1 = rand() % 25;
		int Idx2 = rand() % 25;	

		int Temp = Number[Idx1];
		Number[Idx1] = Number[Idx2];
		Number[Idx2] = Temp;

		Idx1 = rand() % 25;
		Idx2 = rand() % 25;

		Temp = AINumber[Idx1];
		AINumber[Idx1] = AINumber[Idx2];
		AINumber[Idx2] = Temp;
	}

	//플레이어와 AI의 Line 수를 위한 변수
	int Line = 0, AILine = 0;
	
	//인공지능이 선택을 하기 위해서 안바뀐 값을 저장할 배열을 만들어준다.
	int SelectArray[25] = {};

	//AI가 현재 선택할 수 있는 숫자가 몇개인지를 저장할 변수를 만들어준다.
	int SelectCount = 0;

	while (true)
	{
		//콘솔창 초기화
		system("cls");

		std::cout << "=========== Player ================================================= AI ===========" << std::endl;
		
		//AI 빙고판 *로 출력하기
		for (int i = 0; i < 5; ++i)
		{
			for (int j = 0; j < 5; ++j)
			{
				if (Number[i * 5 + j] == INT_MAX)
					std::cout << "*\t";

				else
					std::cout << Number[i * 5 + j] << "\t";
			}

			std::cout << "\t\t";
			for (int j = 0; j < 5; ++j)
			{
				std::cout << "*\t";
				/*	if (AINumber[i * 5 + j] == INT_MAX)
						std::cout << "*\t";

					else
						std::cout << AINumber[i * 5 + j] << "\t";*/
			}
			std::cout << std::endl;
		}
		//플레이어와 AI의 Bindo Line 개수 출력해서 승패 결정
		std::cout << "Bindo Line : " << Line;
		std::cout << "\t\t\t\t\t\t";
		std::cout << "AI Bingo Line : " << AILine << std::endl;

		if (Line >= 5)
		{
			std::cout << "Player Win" << std::endl;
			break;
		}

		else if (AILine >= 5)
		{
			std::cout << "AI Win" << std::endl;
			break;
		}
		//플레이어가 0을 입력하면 나가기, 0보다 작거나 25보다 큰수를 입력하면 초기화
		std::cout << "Input Number(0 : Exit) : ";
		int CheckNumber = 0;
		std::cin >> CheckNumber;

		if (CheckNumber == 0)
			break;

		else if (CheckNumber < 0 || CheckNumber>25)
			continue;

		//배열의 각 요소와 체크값을 비교하여 해당 값이 있는지 판단한다.
		bool Check = false;

		for (int i = 0; i < 25; ++i)
		{
			if (Number[i] == CheckNumber)
			{
				//숫자가 있다면 해당 숫자를 *로 바꿔준다.
				Number[i] = INT_MAX;
				Check = true;
				break;
			}

		}

		/*
		이미 입력한 숫자를 다시 입력했다면 Check 변수는 false를 유지하고 있을 것이다.
		즉 Check 변수가 false일 경우 다시 입력 받게한다.
		*/
		//if (Check == false)
		//if (false == Check)
		if (!Check)
			continue;

		//정상적인 숫자를 입력하여 플레이어의 숫자가 *로 바뀌었을 경우 
		//AI의 숫자에서도 해당 값을 찾아서 *로 바꾸어준다.
		for (int i = 0; i < 25; ++i)
		{
			if (AINumber[i] == CheckNumber)
			{
				AINumber[i] = INT_MAX;
				break;
			}
		}
		//플레이어가 선택한 숫자를 모두 바꾸었다면 인공지능이 선택할 수 있도록 해야한다.
		switch ((AIType)AIState)
		{
		case AIType::Easy:
			//현재 입력 안된 값들을 찾아서 배열에 넣어준다.
			SelectCount = 0;

			for (int i = 0; i < 25; ++i)
			{
				//*이 아닌 일반 값일 경우
				if (AINumber[i] != INT_MAX)
				{
					SelectArray[SelectCount] = AINumber[i];
					++SelectCount;
				}
			}

			CheckNumber = SelectArray[rand() % SelectCount];
			break;
		case AIType::Hard:
			break;
		}
		std::cout << "AI Select : " << CheckNumber << std::endl;

		//AI가 선택한 숫자를 *로 바꿔주도록한다.
		for (int i = 0; i < 25; ++i)
		{
			if (Number[i] == CheckNumber)
			{
				Number[i] = INT_MAX;
				break;
			}
		}

		for (int i = 0; i < 25; ++i)
		{
			if (AINumber[i] == CheckNumber)
			{
				AINumber[i] = INT_MAX;
				break;
			}
		}

		/*
		빙고 줄을 체크한다.
		빙고 줄을 0으로 초기화하고 모든 줄을 체크해본다.
		*/
		Line = 0;
		AILine = 0;

		for (int i = 0; i < 5; ++i)
		{
			int CheckCount = 0, CheckCount1 = 0;
			int AICheckCount = 0, AICheckCount1 = 0;

			for (int j = 0; j < 5; ++j)
			{
				//가로줄 체크
				if (Number[i * 5 + j] == INT_MAX)
					++CheckCount;

				//세로줄 체크
				if (Number[j * 5 + i] == INT_MAX)
					++CheckCount1;

				//가로줄 체크
				if (AINumber[i * 5 + j] == INT_MAX)
					++AICheckCount;

				//세로줄 체크
				if (AINumber[j * 5 + i] == INT_MAX)
					++AICheckCount1;
			}

			//가로 한줄을 체크했는데 CheckCount 변수가 5라면 해당 줄은 모두 *로 변경되어있다는 것이다.
			if (CheckCount == 5)
				++Line;

			if (CheckCount1 == 5)
				++Line;

			if (AICheckCount == 5)
				++AILine;

			if (AICheckCount1 == 5)
				++AILine;
		}

		int CheckCount2 = 0, AICheckCount2 = 0;

		//왼쪽 상단 -> 오른쪽 하단
		for (int i = 0; i < 25; i += 6)
		{
			if (Number[i] == INT_MAX)
				++CheckCount2;

			if (AINumber[i] == INT_MAX)
				++AICheckCount2;
		}

		if (CheckCount2 == 5)
			++Line;

		if (AICheckCount2 == 5)
			++AILine;

		CheckCount2 = 0;
		AICheckCount2 = 0;

		//오른똑 상단 -> 왼쪽 하단
		for (int i = 0; i < 20; ++i)
		{
			if (Number[i] == INT_MAX)
				++CheckCount2;

			if (AINumber[i] == INT_MAX)
				++AICheckCount2;
		}

		if (CheckCount2 == 5)
			++Line;

		if (AICheckCount2 == 5)
			++AILine;
	}

	return 0;
}
