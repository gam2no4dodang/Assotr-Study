#include <iostream>

int main()
{
	//2중 for문의 총 반복은 바깥쪽 for문 반복 * 안쪽 for문 반복
	for (int i = 0; i < 5; ++i)
	{
		for (int j = 0; j < 5; ++j)
		{
			for (int k = 0; k < 5; ++k)
			{
				std::cout << "i : " << i << "j : " << j << "k : " << k << std::endl;
			}
		}
	}

	/*
	2 * 1 = 2
	2 * 2 = 4
	.
	.
	.
	3 * 1 = 2
	3 * 2 = 6
	.
	.
	.
	9 * 9 = 81
	for문을 작성할때 먼저 규칙을 찾아준다.
	2단 규칙 : 2는 고정, 뒤에 곱해지는 수가 1 ~ 9까지 차례로 증가한다.
	3단 규칙 : 3은 고정, 뒤에 곱해지는 수가 1 ~ 9까지 차례로 증가한다.
	.
	9단 규칙 : 9은 고정, 뒤에 곱해지는 수가 1 ~ 9까지 차례로 증가한다.
	
	뒤에 곱해지는 수는 무조건 1 ~ 9 까지 차례로 증가한다.
	앞의 단은 2 ~ 9 까지 1씩 증가 한다.
	
	*/
	for (int i = 2; i <= 9; ++i)
	{
		for (int j = 1; j <= 9; ++j)
		{
			std::cout << i << " * " << j << " = " << i * j << std::endl;
		}
	}

	/*
	
	0*
	1**
	2***
	3****
	4*****

	각 줄마다 별이 1개씩 늘어난다.
	전체 5줄
	한 줄이 끝나면 개행한다.
	*/
	for (int i = 0; i < 5; ++i)
	{
		for (int j = 0; j < i + 1; ++j)
		{
			std::cout << "*";
		}
		std::cout << std::endl;
	}

	/*
	
	0*****
	1****
	2***
	3**
	4*

	5 - 0 = 5
	5 - 1 = 4
	5 - 2 = 3
	5 - 3 = 2
	5 - 4 = 1

	각 줄마다 별이 1개씩 감소한다.
	총 5줄이다.
	한 줄이 끝나면 개행한다.
	*/
	for (int i = 0; i < 5; ++i)
	{
		for (int j = 0; j < 5 - i; ++i)
		{
			std::cout << "*";
		}
		std::cout << std::endl;
	}

	/*
	
	0    *
	1   **
	2  ***
	3 ****
	4*****

	각 줄마다 별이 1개씩 증가한다.
	총 5줄이다.
	공백은 4개부터 시작하여 각 줄마다 1개씩 감소한다.
	한 줄이 끝나면 개행한다.
	별의 출력은 공백 다음에 출력을 한다.

	4 - 0 = 4
	4 - 1 = 3
	4 - 2 = 2
	4 - 3 = 1
	4 - 4 = 0
	*/
	for (int i = 0; i < 5; ++i)
	{
		//공백을 출력한다.
		//4, 3, 2, 1, 0 개를 출력
		for (int j = 0; j < 4 - i; ++j)
		{
			std::cout << " ";
		}
		for (int j = 0; j < i + i; ++j)
		{
			std::cout << "*";
		}
		std::cout << std::endl;
	}

	////내가 푼 역순 별
	//for (int i = 0; i < 5; ++i)
	//{
	//	for (int j = 5; j >= 0; --1)
	//	{
	//		std::cout << "*";
	//	}
	//	std::cout << std::endl;
	//}
  
  /*
	while문 : 반복문이다.

	while(조건식)
	{
	}

	while(true) - 무한 반복
	{
	}
	*/
	int i = 0;

	while (i < 10)
	{
		int j = 0;

		while (j < 10)
		{
			std::cout << "i : " << i << "j : " << j << std::endl;
			++j;
		}
		++i;
	}

	/*
	do while문 : 반복문이다.

	do 
	{
	   동작할 코드
	}while(조건식);

	처음 1번은 동작할 코드가 무조건 동작된다.
	그 후 조건식을 체크해서 true이면 계속 동작되고 false이면 빠져나간다.
	*/
	i = 0;

	do
	{
		std::cout << "i : " << i << std::endl;
		++i;
	} while (i < 10);

	/*
	srand : C++에서 제공하는 난수 테이블이다.
	이 기능을 이용해서 난수 테이블을 준비한다.

	rand() 를 이용해서 난수를 생성한다.
	*/

	//system("cls"); 이 줄을 넣어주면 콘솔창을 지워준다.
	system("cls");

	//time(0) : 현재 시간을 초단위로 환산하여 얻어온다.
	std::cout << time(0) << std::endl;

	//time(0) 을 하면 time_t라는 변수 타입으로 결과가 나오기 때문에 seed의 형태인 unsigned int로 형변환 해준다.
	srand((unsigned int)time(0));

	//첫	번째로 얻어오는 난수는 값이 Seed에 따라 조금씩 증가하게 되어있어서 하나는 걸러내준다.
	int Random = rand();

	for (int i = 0; i < 10; ++i)
	{
		//std::cout << rand() % 101 << std::endl;

		/*
		100 ~ 150
		rand() % ( 최대 - 최소 + 1 ) + 최소
		*/
		std::cout << rand() % (150 - 100 + 1) + 100 << std::endl;
	}

	return 0;
}
